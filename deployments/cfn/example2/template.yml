Parameters:
  ProjectName:
    Type: String
    AllowedValues:
      - dummy-cross-reference-paramter-project
      - dummy-paramter-store-project
  VpcCidrBlock:
    Type: String
    Default: 192.168.0.0/16
    Description: CIDR block of the new VPC where AWS Fargate will be placed
    AllowedPattern: "(?:^$|(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    MinLength: 9
    MaxLength: 18
  SubnetACidrBlock:
    Type: String
    Default: 192.168.0.0/20
    Description: CIDR block for subnet A of the AWS Fargate VPC
    AllowedPattern: "(?:^$|(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    MinLength: 9
    MaxLength: 18

  SubnetBCidrBlock:
    Type: String
    Default: 192.168.16.0/20
    Description: CIDR block for subnet B of the AWS Fargate VPC
    AllowedPattern: "(?:^$|(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."


Resources:
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref "VpcCidrBlock"
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-vpc
  PublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref "SubnetACidrBlock"
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs
      VpcId: !Ref "Vpc"
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-a
  PublicSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref "SubnetBCidrBlock"
      AvailabilityZone:
        !Select
        - 0
        - !GetAZs
      VpcId: !Ref "Vpc"
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-subnet-b
  ComputeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-sg
      GroupDescription: !Sub ${ProjectName}-sg
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: -1
          Description: dummy
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-sg
      VpcId: !Ref "Vpc"

  # ------------------------ コンピューティング環境 ------------------------
  ComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties:
      ComputeEnvironmentName: !Sub "${ProjectName}-compute-environment"
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        Type: EC2
        InstanceTypes:
          - optimal
        MinvCpus: 0
        MaxvCpus: 256
        InstanceRole: !Sub "{{resolve:ssm:${ProjectName}-ComputeInstanceProfileArn}}"
        Subnets:
          - !Ref "PublicSubnetA"
          - !Ref "PublicSubnetB"
        SecurityGroupIds:
          - !Sub "${ComputeSecurityGroup.GroupId}"
        Tags:
          Name: !Sub ${ProjectName}-cumpute-environment
